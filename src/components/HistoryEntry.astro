---
import { Image } from "astro:assets";
import classNames from "classnames";
import { imagePathToSrc } from "../utils/images";
import Link from "./Link.astro";
import Spotify from "./Spotify.astro";

export interface Props {
  id: string;
  year: string;
  image: string;
  spotifyUrl?: string;
  flickrAlbumId?: string;
}

const { id, year, spotifyUrl, image, flickrAlbumId } = Astro.props;
const albums = await Astro.glob(`../content/flickr-albums/*.json`);
const album = albums.find((album) => album.default.id === flickrAlbumId);
---

<div class="space-y-8 font-display">
  <div id={id} class="invisible -translate-y-40"></div>
  <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
    <h2
      class={`md:text-center text-8xl md:text-9xl p-4 text-black rounded-lg self-center`}
    >
      {year}
    </h2>
    <div>{spotifyUrl && <Spotify src={spotifyUrl} />}</div>
    <Image
      src={imagePathToSrc(image)}
      class="rounded-lg"
      alt={`Festivalplakat ${year}`}
    />
    <ul class="space-y-4 p-8 text-xl">
      <slot />
    </ul>
    {
      album && (
        <div class="group flex flex-wrap justify-center gap-3 rounded-lg md:col-span-2 md:justify-start">
          {album.default.photos.map((photo) => (
            <Link
              href={album.default.href}
              external
              unstyled
              title={album.default.title}
            >
              <Image
                src={photo.url_q}
                class={classNames(
                  "rounded-lg transition-transform hover:scale-105",
                )}
                alt={photo.title}
                width={photo.width_q}
                height={photo.height_q}
                quality={75}
              />
            </Link>
          ))}
        </div>
      )
    }
  </div>
</div>
