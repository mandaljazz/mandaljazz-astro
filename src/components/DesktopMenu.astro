---
import Link from "./Link.astro";

export interface Props {
  class?: string;
  navItems: {
    href: string;
    title: string;
  }[];
}

const { class: extraClasses, navItems } = Astro.props;
---

<div class={`relative ${extraClasses}`}>
  <div
    class="absolute w-64 h-64 top-0 -left-32 md:left-32 lg:left-40 -translate-y-1/2 bg-pink rounded-full"
  >
  </div>
  <div
    class="absolute w-44 h-44 top-0 -left-0 md:left-64 lg:left-72 md:top-6 -translate-y-1/2 bg-dark-blue rounded-full"
  >
  </div>
  <div
    class="fixed z-50 w-10 h-10 top-[70px] md:top-24 right-1 md:right-2 lg:right-8 bg-indigo rounded-full"
  >
  </div>
  <div
    class="fixed z-50 w-3 h-3 top-[70px] md:top-24 right-8 md:right-10 lg:right-16 bg-yellow rounded-full animate-orbit"
  >
  </div>
  <nav
    class="menu p-4 flex gap-10 bg-pink text-white fixed w-full top-0 left-0 shadow-lg"
  >
    <a href="/" class="ml-2 hover:-rotate-6 transition-transform"
      ><img
        src="/jazzlaug-white.png"
        class="jazzlaug transition-all w-12 h-auto duration-700"
      /></a
    >
    <nav class="w-full flex flex-row gap-4 sm:gap-8 items-center">
      {
        navItems.map(({ href, title }) => (
          <div class="relative hover:-rotate-3 transition-transform">
            {Astro.url.pathname === href ||
            Astro.url.pathname === `${href}/` ? (
              <div class="absolute -top-1.5 -right-3 bg-yellow w-3 h-3 rounded-full" />
            ) : null}
            <a href={href} title={title} class={`relative z-10`}>
              {title}
            </a>
          </div>
        ))
      }
    </nav>
  </nav>
</div>

<script>
  let lastKnownScrollPosition = 0;
  let ticking = false;

  function setMenuHeight(scrollPos) {
    const menu = document.querySelector(".menu .jazzlaug");
    if (scrollPos > 100) {
      menu.classList.add("w-6");
      menu.classList.remove("w-12");
    } else {
      menu.classList.add("w-12");
      menu.classList.remove("w-6");
    }
  }

  document.addEventListener("scroll", (event) => {
    lastKnownScrollPosition = window.scrollY;

    if (!ticking) {
      window.requestAnimationFrame(() => {
        setMenuHeight(lastKnownScrollPosition);
        ticking = false;
      });

      ticking = true;
    }
  });
</script>
