---
import type { MarkdownLayoutProps } from "astro";
import classnames from "classnames";
import first from "lodash/first";
import last from "lodash/last";
import sortBy from "lodash/sortBy";

import Layout from "./Layout.astro";
import Spotify from "../components/Spotify.astro";
import ArtistNavigationLinks from "../components/ArtistNavigationLinks.astro";
import YouTube from "../components/YouTube.astro";
import { formatHumanDateTime } from "../utils/date";
import IconAndLabel from "../components/IconAndLabel.astro";
import InfoBox from "../components/InfoBox.astro";
import ImageAndLabel from "../components/ImageAndLabel.astro";
import BuyTicketsButton from "../components/BuyTicketsButton.astro";
import { randomHandSrc } from "../utils/images";

const {
  frontmatter: {
    spotifyUrl,
    youtubeUrl,
    title,
    author,
    authorImage,
    tagline,
    id,
    imageAttribution,
    concertStartAt,
    venue,
    sponsoredByBergesenstiftelsen,
    isFree,
    requiresFreeTicket,
    overrideImagePosition,
  },
} = Astro.props;

export type ArtistProps = {
  frontmatter: {
    layout?: string;
    id: string;
    imageAttribution?: string;
    overrideImagePosition?: string;
    title: string;
    shortTitle?: string;
    author?: string;
    authorImage?: string;
    tagline?: string;
    venue?: string;
    concertStartAt?: string;
    spotifyUrl?: string;
    youtubeUrl?: string;
    sponsoredByBergesenstiftelsen?: string;
    hideFromProgram?: boolean;
    hideFromArtistList?: boolean;
    isFree?: boolean;
    isPlaceholder?: boolean;
    requiresFreeTicket?: boolean;
    order?: string;
  };
};

const artistsPages: ArtistProps[] = await Astro.glob("../pages/artist/*.mdx");
const sortedArtistsPages = sortBy(
  [
    ...artistsPages.filter(
      ({ frontmatter: { hideFromArtistList } }) => !hideFromArtistList
    ),
  ],
  "frontmatter.concertStartAt"
);
const indexOfThisArtist = sortedArtistsPages.findIndex(
  ({ frontmatter: { id } }) => id === Astro.props.frontmatter.id
);
const previousArtist =
  indexOfThisArtist === 0
    ? last(sortedArtistsPages)
    : sortedArtistsPages[indexOfThisArtist - 1];
const nextArtist =
  indexOfThisArtist === sortedArtistsPages.length - 1
    ? first(sortedArtistsPages)
    : sortedArtistsPages[indexOfThisArtist + 1];

const showPrevAndNextArtistNavigationLinks =
  sortedArtistsPages.length > 1 && previousArtist && nextArtist;
---

<Layout
  title={`${title} // mandaljazz 2024`}
  description={`${title} på mandaljazz! ${tagline}`}
  image={`/artist/${id}.jpg`}
>
  <main class="px-4 sm:px-6 md:px-8 lg:px-16 xl:px-32 py-24 sm:py-40">
    <div class="max-w-5xl mx-auto space-y-24">
      <div class="space-y-4">
        <div class="space-y-4">
          <h1
            class="text-4xl leading-snug md:text-7xl md:leading-tight font-display hyphens-auto md:hyphens-none"
          >
            {title}
          </h1>
          <div class="grid grid-cols-6 gap-8 flex-nowrap w-full items-end">
            <div class="col-span-6 space-y-8">
              <p class="text-3xl hyphens-auto">
                {tagline}
              </p>
              <div class="space-y-8">
                {
                  concertStartAt && (
                    <IconAndLabel icon="time-outline" type="blue">
                      {formatHumanDateTime(concertStartAt)}
                    </IconAndLabel>
                  )
                }
                {
                  venue && (
                    <IconAndLabel icon="location-outline" type="yellow" flip>
                      {venue}
                    </IconAndLabel>
                  )
                }
              </div>
            </div>
            <div class="col-span-3 md:col-span-4">
              {
                showPrevAndNextArtistNavigationLinks ? (
                  <ArtistNavigationLinks
                    previousArtist={previousArtist}
                    nextArtist={nextArtist}
                    compact
                  />
                ) : null
              }
            </div>
          </div>
        </div>

        <div class="relative grid gap-1">
          <div
            class={classnames(
              "bg-no-repeat bg-cover bg-center w-full h-[520px] rounded",
              { [overrideImagePosition]: overrideImagePosition }
            )}
            style={`background-image: url('/artist/${id}.jpg');`}
          >
          </div>
          {
            imageAttribution && (
              <div class="text-sm justify-self-end">
                Foto: {imageAttribution}
              </div>
            )
          }
        </div>
      </div>
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-y-4 lg:gap-x-4">
        <div class="col-span-2 space-y-4">
          {
            author && (
              <ImageAndLabel
                image={`/people/${authorImage}`}
                alt={`Bilde av ${author}`}
              >
                Tekst: {author}
              </ImageAndLabel>
            )
          }
          <article class="prose prose-quoteless-blockquotes">
            <slot />
          </article>
        </div>
        <div class="col-span-1 flex flex-col gap-y-8">
          {
            spotifyUrl && (
              <div class="flex-1">
                <Spotify src={spotifyUrl} iframeClass="lg:h-full" />
              </div>
            )
          }
          {
            isFree && !requiresFreeTicket && (
              <InfoBox>Konserten er gratis!</InfoBox>
            )
          }
          {
            isFree && requiresFreeTicket && (
              <InfoBox>
                Konserten er gratis, men du må reservere plass med en
                gratisbillett.
              </InfoBox>
            )
          }
          <div class="flex flex-row justify-between">
            {!isFree && <BuyTicketsButton class="flex-0 w-fit h-fit" />}
            {
              isFree && requiresFreeTicket && (
                <BuyTicketsButton class="flex-0 w-fit h-fit" isFree />
              )
            }
            {
              sponsoredByBergesenstiftelsen && (
                <div class="flex flex-col lg:items-end gap-y-1">
                  <p class="text-xs lg:text-right">
                    Konserten er støttet av{" "}
                    <span class="hidden">Bergesenstiftelsen</span>
                  </p>
                  <a
                    href={"https://bergesenstiftelsen.no/"}
                    title={"Bergesenstiftelsen"}
                    rel="noopener nofollow"
                    target="_blank"
                    class="block hover:-rotate-2 transition-transform"
                  >
                    <div
                      style={`background-image: url(/sponsor/bergesenstiftelsen.png);`}
                      class={`w-32 h-12 bg-no-repeat bg-contain bg-left`}
                    />
                  </a>
                </div>
              )
            }
          </div>
        </div>
      </div>
      {youtubeUrl && <YouTube src={youtubeUrl} />}
      {
        showPrevAndNextArtistNavigationLinks ? (
          <ArtistNavigationLinks
            previousArtist={previousArtist}
            nextArtist={nextArtist}
          />
        ) : null
      }
    </div>
  </main>
</Layout>
